{"name":"Gstreamer","tagline":"Mirror of git://anongit.freedesktop.org/gstreamer/gstreamer","body":"GStreamer 1.1.x development series\r\n\r\nWHAT IT IS\r\n----------\r\n\r\nThis is GStreamer, a framework for streaming media.\r\n\r\nWHERE TO START\r\n--------------\r\n\r\nWe have a website at\r\nhttp://gstreamer.freedesktop.org/\r\n\r\nYou should start by going through our FAQ at\r\nhttp://gstreamer.freedesktop.org/data/doc/gstreamer/head/faq/html/\r\n\r\nThere is more documentation; go to\r\nhttp://gstreamer.freedesktop.org/documentation\r\n\r\nYou can subscribe to our mailing lists; see the website for details.\r\n\r\nWe track bugs in GNOME's bugzilla; see the website for details.\r\n\r\nYou can join us on IRC - #gstreamer on irc.freenode.org\r\n\r\nGStreamer 1.0 series\r\n--------------------\r\n\r\nStarring\r\n\r\n  GSTREAMER\r\n\r\nThe core around which all other modules revolve.  Base functionality and\r\nlibraries, some essential elements, documentation, and testing.\r\n\r\n  BASE\r\n\r\nA well-groomed and well-maintained collection of GStreamer plug-ins and\r\nelements, spanning the range of possible types of elements one would want\r\nto write for GStreamer.  \r\n\r\nAnd introducing, for the first time ever, on the development screen ...\r\n\r\n  THE GOOD\r\n\r\n --- \"Such ingratitude.  After all the times I've saved your life.\"\r\n\r\nA collection of plug-ins you'd want to have right next to you on the\r\nbattlefield.  Shooting sharp and making no mistakes, these plug-ins have it\r\nall: good looks, good code, and good licensing.  Documented and dressed up\r\nin tests.  If you're looking for a role model to base your own plug-in on,\r\nhere it is.\r\n\r\nIf you find a plot hole or a badly lip-synced line of code in them,\r\nlet us know - it is a matter of honour for us to ensure Blondie doesn't look\r\nlike he's been walking 100 miles through the desert without water.\r\n\r\n  THE UGLY\r\n\r\n  --- \"When you have to shoot, shoot.  Don't talk.\"\r\n\r\nThere are times when the world needs a color between black and white.\r\nQuality code to match the good's, but two-timing, backstabbing and ready to\r\nsell your freedom down the river.  These plug-ins might have a patent noose\r\naround their neck, or a lock-up license, or any other problem that makes you\r\nthink twice about shipping them.\r\n\r\nWe don't call them ugly because we like them less.  Does a mother love her\r\nson less because he's not as pretty as the other ones ? No  - she commends\r\nhim on his great personality.  These plug-ins are the life of the party.\r\nAnd we'll still step in and set them straight if you report any unacceptable\r\nbehaviour - because there are two kinds of people in the world, my friend:\r\nthose with a rope around their neck and the people who do the cutting.\r\n\r\n  THE BAD\r\n\r\n  --- \"That an accusation?\"\r\n\r\nNo perfectly groomed moustache or any amount of fine clothing is going to\r\ncover up the truth - these plug-ins are Bad with a capital B. \r\nThey look fine on the outside, and might even appear to get the job done, but\r\nat the end of the day they're a black sheep. Without a golden-haired angel\r\nto watch over them, they'll probably land in an unmarked grave at the final\r\nshowdown.\r\n\r\nDon't bug us about their quality - exercise your Free Software rights,\r\npatch up the offender and send us the patch on the fastest steed you can\r\nsteal from the Confederates. Because you see, in this world, there's two\r\nkinds of people, my friend: those with loaded guns and those who dig.\r\nYou dig.\r\n\r\nThe Lowdown\r\n-----------\r\n\r\n  --- \"I've never seen so many plug-ins wasted so badly.\"\r\n\r\nGStreamer Plug-ins has grown so big that it's hard to separate the wheat from\r\nthe chaff.  Also, distributors have brought up issues about the legal status\r\nof some of the plug-ins we ship.  To remedy this, we've divided the previous\r\nset of available plug-ins into four modules:\r\n\r\n- gst-plugins-base: a small and fixed set of plug-ins, covering a wide range\r\n  of possible types of elements; these are continuously kept up-to-date\r\n  with any core changes during the development series.\r\n\r\n  - We believe distributors can safely ship these plug-ins.\r\n  - People writing elements should base their code on these elements.\r\n  - These elements come with examples, documentation, and regression tests.\r\n\r\n- gst-plugins-good: a set of plug-ins that we consider to have good quality\r\n  code, correct functionality, our preferred license (LGPL for the plug-in\r\n  code, LGPL or LGPL-compatible for the supporting library).\r\n\r\n  - We believe distributors can safely ship these plug-ins.\r\n  - People writing elements should base their code on these elements.\r\n \r\n- gst-plugins-ugly: a set of plug-ins that have good quality and correct\r\n  functionality, but distributing them might pose problems.  The license\r\n  on either the plug-ins or the supporting libraries might not be how we'd\r\n  like. The code might be widely known to present patent problems.\r\n\r\n  - Distributors should check if they want/can ship these plug-ins.\r\n  - People writing elements should base their code on these elements.\r\n\r\n- gst-plugins-bad: a set of plug-ins that aren't up to par compared to the\r\n  rest.  They might be close to being good quality, but they're missing\r\n  something - be it a good code review, some documentation, a set of tests,\r\n  a real live maintainer, or some actual wide use.\r\n  If the blanks are filled in they might be upgraded to become part of\r\n  either gst-plugins-good or gst-plugins-ugly, depending on the other factors.\r\n\r\n  - If the plug-ins break, you can't complain - instead, you can fix the\r\n    problem and send us a patch, or bribe someone into fixing them for you.\r\n  - New contributors can start here for things to work on.\r\n\r\nPLATFORMS\r\n---------\r\n\r\n- Linux is of course fully supported\r\n- FreeBSD is reported to work; other BSDs should work too\r\n- Solaris is reported to work; a specific sunaudiosink plugin has been written\r\n- MacOSX works, binary 1.x packages can be built using the cerbero build tool\r\n- Windows works; binary 1.x packages can be built using the cerbero build tool\r\n  - MSys/MinGW builds\r\n  - Microsoft Visual Studio builds are not yet available or supported\r\n- Android works, binary 1.x packages can be built using the cerbero build tool\r\n- iOS works\r\n\r\nINSTALLING FROM PACKAGES\r\n------------------------\r\n\r\nYou should always prefer installing from packages first.  GStreamer is\r\nwell-maintained for a number of distributions, including Fedora, Debian,\r\nUbuntu, Mandrake, Gentoo, ...\r\n\r\nOnly in cases where you:\r\n- want to hack on GStreamer\r\n- want to verify that a bug has been fixed\r\n- do not have a sane distribution\r\nshould you choose to build from source tarballs or git.\r\n\r\nFind more information about the various packages at\r\nhttp://gstreamer.freedesktop.org/download/\r\n\r\nCOMPILING FROM SOURCE TARBALLS\r\n------------------------------\r\n\r\n- again, make sure that you really need to install from source !\r\n  If GStreamer is one of your first projects ever that you build from source,\r\n  consider taking on an easier project.\r\n\r\n- check output of ./configure --help to see if any options apply to you\r\n- run\r\n  ./configure\r\n  make\r\n\r\n  to build GStreamer.\r\n- if you want to install it (not required, but what you usually want to do), run\r\n  make install\r\n\r\n- try out a simple test:\r\n  gst-launch -v fakesrc num_buffers=5 ! fakesink\r\n  (If you didn't install GStreamer, prefix gst-launch with tools/)\r\n\r\n  If it outputs a bunch of messages from fakesrc and fakesink, everything is\r\n  ok.\r\n\r\n  If it did not work, keep in mind that you might need to adjust the\r\n  PATH and/or LD_LIBRARY_PATH environment variables to make the system\r\n  find GStreamer in the prefix where you installed (by default that is /usr/local).\r\n\r\n- After this, you're ready to install gst-plugins, which will provide the\r\n  functionality you're probably looking for by now, so go on and read\r\n  that README.\r\n\r\nCOMPILING FROM GIT\r\n------------------\r\n\r\nWhen building from git sources, you will need to run autogen.sh to generate\r\nthe build system files.\r\n\r\nYou will need a set of additional tools typical for building from git,\r\nincluding:\r\n- autoconf\r\n- automake\r\n- libtool\r\n\r\nautogen.sh will check for recent enough versions and complain if you don't have\r\nthem.  You can also specify specific versions of automake and autoconf with\r\n--with-automake and --with-autoconf\r\n\r\nCheck autogen.sh options by running autogen.sh --help\r\n\r\nautogen.sh can pass on arguments to configure\r\n\r\nWhen you have done this once, you can use autoregen.sh to re-autogen with\r\nthe last passed options as a handy shortcut.  Use it.\r\n\r\nAfter the autogen.sh stage, you can follow the directions listed in\r\n\"COMPILING FROM SOURCE\"\r\n\r\nYou can also run your whole git stack uninstalled in your home directory,\r\nso that you can quickly test changes without affecting your system setup or\r\ninterfering with GStreamer installed from packages.  Many GStreamer developers\r\nuse an uninstalled setup for their work.\r\n\r\nThere is a 'create-uninstalled-setup.sh' script in\r\n\r\n  http://cgit.freedesktop.org/gstreamer/gstreamer/tree/scripts/\r\n\r\nto easily create an uninstalled setup from scratch.\r\n\r\n\r\nPLUG-IN DEPENDENCIES AND LICENSES\r\n---------------------------------\r\n\r\nGStreamer is developed under the terms of the LGPL (see LICENSE file for\r\ndetails). Some of our plug-ins however rely on libraries which are available\r\nunder other licenses. This means that if you are distributing an application\r\nwhich has a non-GPL compatible license (for instance a closed-source\r\napplication) with GStreamer, you have to make sure not to distribute GPL-linked\r\nplug-ins.\r\n\r\nWhen using GPL-linked plug-ins, GStreamer is for all practical reasons\r\nunder the GPL itself.\r\n\r\nHISTORY\r\n-------\r\n\r\nThe fundamental design comes from the video pipeline at Oregon Graduate\r\nInstitute, as well as some ideas from DirectMedia.  It's based on plug-ins that\r\nwill provide the various codec and other functionality.  The interface\r\nhopefully is generic enough for various companies (ahem, Apple) to release\r\nbinary codecs for Linux, until such time as they get a clue and release the\r\nsource.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}